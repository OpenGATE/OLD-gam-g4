
name: CI

on:
  push:
    branches: [ master, conda ]
    tags:
      - '*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:


jobs:
  build_wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    env:
      GEANT4_VERSION: 'v10.7.0'
      ITK_VERSION: 'v5.1.0'
      ROOT_VERSION: 'v6-25-01'

    steps:
    - name: Checkout github repo
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - uses: kenchan0130/actions-system-info@master
      id: system-info
    - name: Cache modules
      id: cache_gam_g4_dependencies
      uses: actions/cache@v2
      with:
        path: ~/software
        key: ${{ runner.os }}-${{ steps.system-info.outputs.release }}_geant4_${{ env.GEANT4_VERSION }}_itk_${{ env.ITK_VERSION }}_tryConda3
        restore-keys: ${{ runner.os }}-${{ steps.system-info.outputs.release }}_geant4_${{ env.GEANT4_VERSION }}_itk_${{ env.ITK_VERSION }}_tryConda3
    - name: Create Wheel Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
          if  [ ${{ matrix.python-version }} == "3.5" ]; then
            export PYTHONFOLDER="cp35-cp35m"
          elif [ ${{ matrix.python-version }} == "3.6" ]; then
            export PYTHONFOLDER="cp36-cp36m"
          elif [ ${{ matrix.python-version }} == "3.7" ]; then
            export PYTHONFOLDER="cp37-cp37m"
          elif [ ${{ matrix.python-version }} == "3.8" ]; then
            export PYTHONFOLDER="cp38-cp38"
          elif [ ${{ matrix.python-version }} == "3.9" ]; then
            export PYTHONFOLDER="cp39-cp39"
          fi
          mkdir -p $HOME/software
          docker run --rm -e "PYTHONFOLDER=${PYTHONFOLDER}" -v $GITHUB_WORKSPACE:/home tbaudier/gam_g4:v10.7.0 /home/.github/workflows/createWheelLinux.sh
          ls wheelhouse
          sudo rm -rf dist
          mv wheelhouse dist
    - uses: conda-incubator/setup-miniconda@v2
      if: matrix.os == 'macos-latest'
      with:
          auto-update-conda: true
          activate-environment: gam_g4
          python-version: ${{ matrix.python-version }}
    - name: Create Wheel Mac
      if: matrix.os == 'macos-latest'
      shell: bash -l {0}
      run: |     
          brew update
          brew install --force --verbose \
                       ccache \
                       fftw \
                       llvm \
                       libomp \
                       xquartz \
                       wget
          export LDFLAGS="-L/usr/local/opt/llvm/lib"
          export CPPFLAGS="-I/usr/local/opt/llvm/include -fopenmp"
          conda info
          conda list
          which python
          python --version
          export PATH="/usr/local/miniconda/envs/gam_g4/bin/:$PATH"
          pip install wheel delocate
          conda install -c anaconda qt
          conda install -c conda-forge root

          mkdir -p $HOME/software
          if [ "${{ steps.cache_gam_g4_dependencies.outputs.cache-hit }}" != 'true' ]; then
              cd $HOME/software
              mkdir geant4
              cd geant4
              mkdir src bin data
              git clone --branch $GEANT4_VERSION https://github.com/Geant4/geant4.git --depth 1 src
              cd bin
              cmake -DCMAKE_CXX_FLAGS=-std=c++17 \
                    -DGEANT4_INSTALL_DATA=ON \
                    -DGEANT4_INSTALL_DATADIR=$HOME/software/geant4/data \
                    -DGEANT4_USE_QT=ON \
                    -DGEANT4_USE_OPENGL_X11=ON \
                    -DGEANT4_BUILD_MULTITHREADED=ON \
                    ../src
              make -j4

              cd $HOME/software
              mkdir itk
              cd itk
              mkdir src bin
              git clone --branch $ITK_VERSION https://github.com/InsightSoftwareConsortium/ITK.git --depth 1 src
              cd bin
              cmake -DCMAKE_CXX_FLAGS=-std=c++17 \
                    -DBUILD_TESTING=OFF \
                    -DITK_USE_FFTWD=ON \
                    -DITK_USE_FFTWF=ON \
                    -DITK_USE_SYSTEM_FFTW:BOOL=ON \
                    ../src
              make -j4
          fi

          cd $GITHUB_WORKSPACE
          ls /usr/local/miniconda/envs/gam_g4/plugins/platforms
          source $HOME/software/geant4/bin/geant4make.sh
          export CMAKE_PREFIX_PATH=$HOME/software/root/bin:$HOME/software/geant4/bin:$HOME/software/itk/bin/:${CMAKE_PREFIX_PATH}
          mkdir gam_g4/plugins
          #cp -r /usr/local/miniconda/envs/gam_g4/plugins/platforms gam_g4/plugins/
          #cp -r /usr/local/miniconda/envs/gam_g4/plugins/imageformats gam_g4/plugins/
          mkdir gam_g4/plugins/miniconda
          #cp /usr/local/miniconda/envs/gam_g4/lib/libQt5Svg.5.9.7.dylib gam_g4/plugins/miniconda/
          ls -a
          #python3 .github/workflows/redoQt5LibsMac.py
          python3 setup.py sdist bdist_wheel
          ls dist
          export DYLD_LIBRARY_PATH=$HOME/software/root/bin/lib:$HOME/software/geant4/bin/BuildProducts/lib:/usr/local/miniconda/envs/gam_g4/plugins/platforms:$DYLD_LIBRARY_PATH:/usr/local/miniconda/envs/gam_g4/lib
          delocate-listdeps --all dist/*.whl
          #delocate-wheel -w fixed_wheels -v dist/*.whl
          #rm -rf dist
          #ls fixed_wheels
          #delocate-listdeps --all fixed_wheels/*.whl
          #mv fixed_wheels dist
    - name: Upload wheels
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist/

